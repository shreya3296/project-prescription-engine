# -*- coding: utf-8 -*-
"""service_model_loaded.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wgv-aVF1Ki_W7Kf6m2Qie1ot_9BFeEqR
"""

from fastapi import FastAPI, Request
from starlette.middleware.cors import CORSMiddleware
from api import model_load

def generate(symptoms):

    prediciton = model_load.run(symptoms)

    return prediciton

# Setup FastAPI app
app = FastAPI(title="The Prescribers", description="input symptoms to get the diagnosis", version="v3.0")

# Enable CORSMiddleware
app.add_middleware(
    CORSMiddleware,
    allow_credentials=False,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)


# Routes
@app.get("/")
async def get_index():
    return {"message": "Plase, input a symptom to predict the diagnosis"}

@app.get("/test")
async def invoke_chat():
    input_data = {
      "symptoms": "I have a head ache and have back pain",
      "age": 30,
      "gender": "M"
    }
    return generate(input_data)

# TODO: update
@app.post("/use")
async def invoke_chat(request: Request):
    body = await request.json()
    text = body.get("input_message")

    if text is None:
        return {"error": "No symptoms provided"}

    prediction = model_load.run(text)
    return {"prediction": prediction}